SET SQL_SAFE_UPDATES = 0; -- 안전모드 해제

-- 1.emp,dept,salgrade와 동일하게 구성된 테이블을 temp, tdept, tsalgrade 라는 이름으로 만드시오.
CREATE TABLE TEMP AS SELECT * FROM EMP;
CREATE TABLE TDEPT AS SELECT * FROM DEPT;
CREATE TABLE TSALGRADE AS SELECT * FROM SALGRADE;

-- 2.화면과 같이 8명의 사원 정보와 부서정보를 등록하는 sql문을 작성하시오.
INSERT INTO   TEMP 
	   VALUES (7201, 'TEST_USER1',  'MANAGER', 7788, '2016-01-02', 4500, NULL, 50),
			  (7202, 'TEST_USER2',    'CLERK', 7201, '2016-02-21', 1800, NULL, 50),
              (7203, 'TEST_USER3',  'ANALYST', 7201, '2016-04-11', 3400, NULL, 60),
              (7204, 'TEST_USER4', 'SALESMAN', 7201, '2016-05-31', 2700,  300, 60),
			  (7205, 'TEST_USER5',    'CLERK', 7201, '2016-07-20', 2600, NULL, 70),
              (7206, 'TEST_USER6',    'CLERK', 7201, '2016-09-08', 2600, NULL, 70),
              (7207, 'TEST_USER7', 'LECTURER', 7201, '2016-10-28', 2300, NULL, 80),
              (7208, 'TEST_USER8',  'STUDENT', 7201, '2018-03-09', 1200, NULL, 80);

-- 3.temp에 속한 사원중 50번 부서에서 근무하는 사원들의 평균 급여보다 많은 급여를 받고 있는 사원들을
-- 70번 부서로 옮기는 sql문을 작성하시오.
UPDATE TEMP
SET    DEPTNO = 70
WHERE  SAL > (SELECT T.SAL
			    FROM   (SELECT AVG(SAL) AS SAL 
                          FROM TEMP 
					     WHERE DEPTNO = 50) T);

-- 4.temp에 속한 사원 중, 60번 부서의 사원 중에 입사일이 가장 빠른 사원보다
-- 늦게 입사한 사원의 급여를 15%인상하고 80번 부서로 옮기는 sql 문을 작성하시오
UPDATE TEMP
SET    SAL = SAL*1.5,
	   DEPTNO = 80
WHERE  HIREDATE > (SELECT T.HIREDATE
					 FROM (SELECT MIN(HIREDATE) AS HIREDATE
							 FROM TEMP 
                             WHERE DEPTNO = 60) T);

-- 5.temp에 속한 사원 중, 급여등급이 5인 사원을 삭제하는 sql문을 작성하시오.
DELETE T 
FROM   TEMP T 
JOIN   TSALGRADE S ON T.SAL BETWEEN S.LOSAL AND S.HISAL
WHERE  S.GRADE = 5; 

-- 6.DML과 TCL 명령어의 종류를 나열하고, 어떤 역할을 하는 명령어 인지 설명하시오.
 -- DML : SELECT 데이터 조회, UPDATE 데이터 수정, INSERT 데이터 추가, DELETE 데이터 삭제
 -- TCL : COMMIT DB에 업로드, ROLLBACK 트랜젝션 취소, + SAVEPOINT

-- ----------------------------------CHAPTER 12-------------------------------------
-- DDL : 테이블을 대상으로

-- CREATE TABLE NAME(NAME TYPE, NAME2 TYPE2.... );
CREATE TABLE EMP_DDL (
  EMPNO    INT(4),      # ORACLE -> NUMBER 
  ENAME    VARCHAR(10), # ORACLE -> VARCHAR2
  JOB      VARCHAR(9),
  MGR      INT(4),
  HIREDATE DATE,
  SAL      DECIMAL(7,2), -- 소수점 
  COMM     DECIMAL(7,2),
  DEPTNO   INT(2)
);

DESC EMP_DDL;

-- 테이블 복사하여 생성
CREATE TABLE DEPT_DDL 
    AS SELECT * FROM DEPT;
    
SELECT * FROM DEPT_DDL;

-- 열 구조와 일부 데이터만 복사하여 생성
CREATE TABLE EMP_DDL_30
    AS SELECT *
		 FROM EMP
		WHERE DEPTNO = 30;

SELECT * FROM EMP_DDL_30;

-- 열 구조만 복사하여 생성
CREATE  TABLE EMPDEPT_DDL
    AS SELECT E.EMPNO, E.ENAME, E.JOB, E.MGR, E.HIREDATE,
			  E.SAL, E.COMM, E.DEPTNO, D.DNAME, D.LOC
		 FROM EMP E, DEPT D
		WHERE FALSE;

SELECT * FROM EMPDEPT_DDL;

CREATE TABLE EMP_ALTER AS SELECT * FROM EMP;
-- ALTER : 테이블 구조 변경
  -- ADD : 열추가
ALTER TABLE EMP_ALTER
  ADD HP VARCHAR(20);

SELECT * FROM EMP_ALTER;

  -- RENAME : 열 이름변경
ALTER TABLE EMP_ALTER
RENAME COLUMN HP TO TEL;

SELECT * FROM EMP_ALTER;

  -- MODIFY : 열의 자료형 변경
ALTER TABLE EMP_ALTER
MODIFY EMPNO INT;

DESC EMP_ALTER;

  -- DROP : 열 삭제
ALTER TABLE EMP_ALTER
DROP COLUMN TEL;

SELECT * FROM EMP_ALTER;

-- RENAME : 테이블 이름 변경
RENAME TABLE EMP_ALTER TO EMP_RENAME;

-- TRUNCATE : 테이블 데이터 삭제 (ROLLBACK 불가)
TRUNCATE TABLE EMP_RENAME;

SELECT * FROM EMP_RENAME;

-- DROP : 테이블 삭제
DROP TABLE EMP_RENAME;

-- 324P 확인문제
-- Q1
CREATE TABLE EMP_HW(
	   EMPNO INT,
       ENAME VARCHAR(10),
       JOB VARCHAR(9),
       MGR INT,
       HIREDATE DATE,
       SAL DECIMAL(7,2),
       COMM DECIMAL(7,2),
       DEPTNO INT);

-- Q2 BIGO 열 추가, 길이 20의 가변형 문자열
ALTER TABLE EMP_HW
ADD BIGO VARCHAR(20);

-- Q3 BIGO 열 수정, 열 크기 30
ALTER TABLE EMP_HW
MODIFY BIGO VARCHAR(30);

-- Q4 BIGO 열 이름 수정, REMARK
ALTER TABLE EMP_HW
RENAME COLUMN BIGO TO REMARK;

-- Q5 EMP_HW 테이블에 EMP 테이블 데이터 저장, REMARK는 NULL 삽입
INSERT INTO   EMP_HW (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO, REMARK)
			  SELECT  EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO, NULL
			    FROM  EMP;

-- Q6 EMP_HW 테이블 삭제
DROP TABLE EMP_HW;


DESC EMP_HW;
SELECT * FROM EMP_HW;

-- ----------------------------------CHAPTER 14-------------------------------------
-- 제약조건
-- NOT NULL : NULL 허용 X 
-- UNOQUE   : 중복 허용 X 
-- PRIMARY KEY : 중복 허용 X, NULL 허용 X, 테이블당 하나만 지정 가능
-- FOREIGN KEY : 다른테이블의 열을 참조하여 존재하는 값만 입력 가능

-- NOT NULL
CREATE TABLE TABLE_NN(
	LOGIN_ID  VARCHAR(20) NOT NULL,
    LOGIN_PWD VARCHAR(20) NOT NULL,
    TEL		  VARCHAR(20)
);
DESC TABLE_NN;

-- 제약조건 이름 지정
/* ORACLE
CREATE TABLE TABLE_NN2(
	LOGIN_ID  VARCHAR(20) CONSTRAINT TABLE_LGNID_NN NOT NULL,
    LOGIN_PWD VARCHAR(20) CONSTRAINT TABLE_LGNPW_NN NOT NULL,
    TEL		  VARCHAR(20)
);*/
CREATE TABLE TABLE_NN2 (
    LOGIN_ID  VARCHAR(20) NOT NULL,
    LOGIN_PWD VARCHAR(20) NOT NULL,
    TEL       VARCHAR(20),
    CONSTRAINT TABLE_LGNID_NN CHECK (LOGIN_ID IS NOT NULL),
    CONSTRAINT TABLE_LGNPW_NN CHECK (LOGIN_PWD IS NOT NULL)
);

-- 제약 조건 추가
ALTER TABLE TABLE_NN MODIFY TEL VARCHAR(20) NOT NULL;
 -- ALTER TABLE TABLE_NN MODIFY(TEL NOT NULL); # ORACLE
 
/* ORACLE
-- 제약조건 이름 변경
ALTER TABLE TABLE_NN
RENAME CONSTRAINT TABLE_LGNID_NN TO TABLE_LGNID2_NN; 

-- 제약 조건 삭제
ALTER TABLE TABLE_NN
DROP CONSTRAINT TABLE_LGNID_NN;
*/

-- UNIQUE
CREATE TABLE TABLE_UQ(
	LOGIN_ID  VARCHAR(20) UNIQUE,
    LOGIN_PWD VARCHAR(20) NOT NULL,
    TEL		  VARCHAR(20)
);
DESC TABLE_UQ;

-- PRIMARY KEY
CREATE TABLE TABLE_PK(
	LOGIN_ID  VARCHAR(20) PRIMARY KEY,
    LOGIN_PWD VARCHAR(20) NOT NULL,
    TEL		  VARCHAR(20)
);
DESC TABLE_PK;

-- FOREIGN KEY
CREATE TABLE DEPT_FK(
	DEPTBO INT PRIMARY KEY,
    DNAME  VARCHAR(14),
    LOC    VARCHAR(13)
);

CREATE TABLE EMP_FK(
	   EMPNO INT PRIMARY KEY,
       ENAME VARCHAR(10),
       JOB VARCHAR(9),
       MGR INT,
       HIREDATE DATE,
       SAL DECIMAL(7,2),
       COMM DECIMAL(7,2),
       DEPTNO INT REFERENCES DEPT_FK (DEPTNO)
);

-- CHECK
CREATE TABLE TABLE_CK (
    LOGIN_ID  VARCHAR(20) PRIMARY KEY,
    LOGIN_PWD VARCHAR(20),
    TEL       VARCHAR(20),
    CONSTRAINT TABLE_LGNPW CHECK (LENGTH(LOGIN_PWD) > 3)
);

INSERT INTO TABLE_CK
VALUES ('TEST', '123','123'); # ERROR : LOGIN_PWD 4자리 이상해야함

-- DEFAULT 
CREATE TABLE TABLE_DF(
	LOGIN_ID  VARCHAR(20) PRIMARY KEY,
    LOGIN_PWD VARCHAR(20) DEFAULT '1234',
    TEL       VARCHAR(20)
);
DESC TABLE_DF;


-- ---- CHAPTER 15----
-- 권한 부여 
# GRANT [객체권한] ON [스키마,객체이름] TO [사용자이름,롤이름]

-- 권한 해제
# REVOKE [객체권한] ON [스키마,객체이름] TO [사용자이름,롤이름]
